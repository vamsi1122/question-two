1) In the given architecture foo.com utilizes CDN (Content Delivery Network), which is geographically distributed network of proxy servers and their data centers. The goal is to provide high availability and performance by distributing the service spatially relative to end users. The load balancers help group of servers to efficiently distribute incoming traffic from services. In here services can be API, Web services interacting with foo.com.

2) I would prefer to use CI/CD including container orchestration platform. Kubernetes is considerd industry standard for container orchestration platform. To consider if an applicaiton is running in 2 replicas, and now there's a small change in the app. If we re-deploy using rolling update service, first it will take down one pod and update, once the app is come to readiness it will route all the traffic to new pod and update the other pod accordingly. Rolling update ensures we always have some ready backend pods to serve client requests. 
